package {		import flash.display.Sprite;	import flash.events.Event;	import flash.events.TimerEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.geom.Point;	import flash.utils.Timer;	import map.MapUnit;		public class MapGenerator extends Sprite {				public  var spacing:Number;		public  var blockWidth:Number;		public  var blockHeight:Number;				private var nrows:int = 143;		private var ncols:int = 360;		private var mapData:Array;		private var blocks:Array;		private var lastDestination:Point;		private var shuffle:Timer;				public function MapGenerator(bS:Number = 1, bW:Number = 2, bH:Number = 3) {						spacing = bS;			blockWidth = bW;			blockHeight = bH;			var myLoader:URLLoader = new URLLoader();			myLoader.addEventListener(Event.COMPLETE, onDataLoaded);			myLoader.load(new URLRequest("data/glp00ag60.asc"));						lastDestination = new Point(0,0);			shuffle = new Timer(1000, 0);			// shuffle.addEventListener(TimerEvent.TIMER, pickNewDestination);					}		public function lockDownCurrentPosition():Point {			shuffle.stop();			return lastDestination;		}		public function getPoint():Point {			var x:int = Math.floor( Math.random() * nrows );			var y:int = Math.floor( Math.random() * ncols );			var point:Point = new Point(x,y);			return point;		}		public function unlock():void {			shuffle.reset();			shuffle.start();		}		public function getBlockProperties():Object {			return {				width: blockWidth,				height: blockHeight,				spacing: spacing			}		}				private function onDataLoaded(e:Event):void {			var popData:Array = e.target.data.split(/\n/);			popData.splice(0,6);			mapData = popData;			generateMap();			centreMap();			this.cacheAsBitmap = true;			dispatchEvent(new MapEvent("onReady"));			shuffle.start();		}				private function generateMap():void {			blocks = new Array(nrows);			var values:Array = new Array();			for (var i=0; i<=nrows; i++) {				values = mapData[i].split(' ');				blocks[i] = new Array();				for (var j=0; j<=ncols; j++) {					var block:MapUnit = new MapUnit(values[j], 2, 3);					block.y = i * (block.height + spacing);					block.x = j * (block.width + spacing);					blocks[i].push(block);					addChild(block.drawBlock());				}			}		}		private function centreMap():void {			var mapWidth:int = (ncols*(blockWidth+spacing)) - spacing;			if (stage.stageWidth > mapWidth)				x = (WarRoom.FULL_WIDTH - mapWidth) / 2;			else				x = WarRoom.HALF_WIDTH - (mapWidth / 2);			x = Math.floor(x);			y = 100;		}		public function pickNewDestination(e:TimerEvent):void {			var x:int = Math.floor( Math.random() * nrows );			var y:int = Math.floor( Math.random() * ncols );			// blocks[lastDestination.x][lastDestination.y].deselect();			// lastDestination = new Point( x , y );			// var evt = new MapEvent("onShuffle");			// evt.newDestination = lastDestination;			// dispatchEvent(evt);			// blocks[x][y].select();		}			}	}